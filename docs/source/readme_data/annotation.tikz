\documentclass[class=minimal,border=2pt]{standalone}
\usepackage[utf8]{inputenc}
\usepackage{tikz}
\usepackage{adjustbox}
\usetikzlibrary{shapes.geometric, arrows, shadows, positioning, calc}
\pagenumbering{gobble}

\tikzset{multiple/.style = {double copy shadow={shadow xshift=1ex,shadow
         yshift=-1.5ex,draw=black!30},fill=white,draw=black,thick,minimum height = 1cm,minimum
           width=2cm},
         ordinary/.style = {rectangle,draw,thick,minimum height = 1cm,minimum width=2cm}}

\tikzstyle{startstop} = [rectangle, rounded corners, minimum width=3cm, minimum height=1cm,text centered, draw=black, fill=red!30]
\tikzstyle{io} = [trapezium, trapezium left angle=70, trapezium right angle=110, minimum width=3cm, minimum height=1cm, text centered, draw=black, fill=blue!30]
\tikzstyle{process} = [rectangle, minimum width=3cm, minimum height=1cm, text centered, text width=3cm, draw=black, fill=orange!30]
\tikzstyle{pprocess} = [multiple, minimum width=3cm, minimum height=1cm, text centered, text width=3cm, draw=black, fill=orange!30]

\tikzstyle{decision} = [diamond, minimum width=3cm, minimum height=1cm, text centered, draw=black, fill=green!30]
\tikzstyle{arrow} = [thick,->,>=stealth]

\begin{document}
\begin{adjustbox}{margin=2cm}

\begin{tikzpicture}[node distance=2cm]

\node (hmm_metrics) [io, text width=2.5cm] {Hmmcopy Metrics};
\node (aln_metrics) [io, text width=2.5cm, xshift = -6cm] {Alignment metrics};
\node (seg_plots) [io, text width=2.5cm, xshift = -12cm] {segment plots};

\node (merge_metrics) [decision, below of=aln_metrics, xshift=3cm] {merge};
\draw[-latex] (hmm_metrics) -- coordinate (ab) (merge_metrics);
\draw[-latex] (aln_metrics) -- coordinate (ab) (merge_metrics);

\node (hmm_reads) [io, below of=merge_metrics, xshift=6cm] {Hmmcopy Reads};

\node (filter_segs) [process, below of=seg_plots] {Filter segments};
\draw[-latex] (seg_plots) -- coordinate (ab) (filter_segs);
\draw[-latex] (merge_metrics) -- coordinate (ab) (filter_segs);

\node (pass_segs) [io, below of=filter_segs] {pass segs};
\draw[-latex] (filter_segs) -- coordinate (ab) (pass_segs);
\node (fail_segs) [io, below of=filter_segs, xshift=4cm] {fail segs};
\draw[-latex] (filter_segs) -- coordinate (ab) (fail_segs);


\node (cellcycle) [process, below of=merge_metrics] {Cell Cycle Classifier};
\draw[-latex] (hmm_reads) -- coordinate (ab) (cellcycle);
\draw[-latex] (merge_metrics) -- coordinate (ab) (cellcycle);


\node (quality) [process, below of=cellcycle] {Quality Classifier};
\draw[-latex] (hmm_reads) -- coordinate (ab) (quality);
\draw[-latex] (cellcycle) -- coordinate (ab) (quality);

\node (corrupt_tree) [process, below of=quality, xshift=4cm] {Corrupt Tree};
\draw[-latex] (quality) -- coordinate (ab) (corrupt_tree);
\draw[-latex] (hmm_reads) -- coordinate (ab) (corrupt_tree);

\node (final_metrics) [io, text width=1.5cm, below of=corrupt_tree] {metrics csv};
\draw[-latex] (corrupt_tree) -- coordinate (ab) (final_metrics);



\node (corrupt_heatmap) [process, right of=corrupt_tree, xshift=2cm] {Corrupt Tree Heatmap};
\draw[-latex] (corrupt_tree) -- coordinate (ab) (corrupt_heatmap);

\node (corrupt_heatmap_out) [io,text width=2cm, below of=corrupt_heatmap] {Heatmap pdf};
\draw[-latex] (corrupt_heatmap) -- coordinate (ab) (corrupt_heatmap_out);



\node (qc_report) [process, below of=quality, xshift=-4cm] {QC report};
\node (gc_metrics) [io, below of=quality, xshift=-10cm] {GC metrics};
\draw[-latex] (quality) -- coordinate (ab) (qc_report);
\draw[-latex] (gc_metrics) -- coordinate (ab) (qc_report);


\node (report_html) [io, text width=2cm, below of=qc_report] {report HTML};
\draw[-latex] (qc_report) -- coordinate (ab) (report_html);



\node (plot_heatmap) [process, below of=quality] {plot filtered heatmap};
\draw[-latex] (hmm_reads) -- coordinate (ab) (plot_heatmap);
\draw[-latex] (quality) -- coordinate (ab) (plot_heatmap);

\node (heatmap_out) [io,text width=2cm, below of=plot_heatmap] {Heatmap pdf};
\draw[-latex] (plot_heatmap) -- coordinate (ab) (heatmap_out);

\end{tikzpicture}

\end{adjustbox}
\end{document}